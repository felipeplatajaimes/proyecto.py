# proyecto_final.py

import requests
import pandas as pd
import matplotlib.pyplot as plt

# ------------------ CONFIGURACI√ìN ------------------
INDICADOR = "NY.GDP.PCAP.CD"
PAISES = ["CO", "MX", "BR"]
ANIO_INICIO = 2010
ANIO_FIN = 2022

# ------------------ UTILIDADES ------------------
def validar_opcion(opcion, opciones_validas):
    try:
        return int(opcion) in opciones_validas
    except ValueError:
        return False

def mostrar_mensaje(tipo, texto):
    iconos = {
        "info": "‚ÑπÔ∏èINFO:",
        "exito": "‚úÖ√âXITO:",
        "error": "‚ùåERROR:"
    }
    print(f"{iconos.get(tipo, '')} {texto}")

# ------------------ DESCARGA DE DATOS ------------------
def descargar_datos():
    mostrar_mensaje("info", f"Descargando datos de {INDICADOR} para pa√≠ses: {', '.join(PAISES)}")
    registros = []

    for pais in PAISES:
        url = f"https://api.worldbank.org/v2/country/{pais}/indicator/{INDICADOR}?date={ANIO_INICIO}:{ANIO_FIN}&format=json&per_page=100"
        try:
            respuesta = requests.get(url)
            datos = respuesta.json()[1]
            for entrada in datos:
                registros.append({
                    "pa√≠s": entrada["country"]["value"],
                    "a√±o": entrada["date"],
                    "valor": entrada["value"]
                })
        except Exception as e:
            mostrar_mensaje("error", f"No se pudo obtener datos para {pais}: {e}")

    df = pd.DataFrame(registros)
    mostrar_mensaje("exito", f"Datos descargados correctamente: {len(df)} registros")
    return df

# ------------------ AN√ÅLISIS DE DATOS ------------------
def analizar_datos(df):
    if df is None or df.empty:
        mostrar_mensaje("error", "No se proporcionaron datos para analizar.")
        return

    resumen = df.groupby("pa√≠s")["valor"].agg(["mean", "median", "std"]).reset_index()
    print("\nüìà Estad√≠sticas por pa√≠s:")
    print(resumen)

    # Gr√°fico
    plt.figure(figsize=(10, 6))
    for pais in df["pa√≠s"].unique():
        datos_pais = df[df["pa√≠s"] == pais]
        plt.plot(datos_pais["a√±o"], datos_pais["valor"], label=pais)

    plt.title("PIB per c√°pita (USD)")
    plt.xlabel("A√±o")
    plt.ylabel("Valor")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()

# ------------------ MEN√ö PRINCIPAL ------------------
def mostrar_menu():
    print("\nüìä Bienvenido al Analizador Econ√≥mico")
    print("1. Descargar datos")
    print("2. Analizar datos")
    print("3. Salir")

def main():
    datos = None
    while True:
        mostrar_menu()
        opcion = input("Seleccione una opci√≥n (1-3): ")

        if not validar_opcion(opcion, [1, 2, 3]):
            mostrar_mensaje("error", "Opci√≥n inv√°lida. Intente de nuevo.")
            continue

        opcion = int(opcion)
        if opcion == 1:
            datos = descargar_datos()
        elif opcion == 2:
            analizar_datos(datos)
        elif opcion == 3:
            print("üëã Gracias por usar el programa. Hasta pronto.")
            break

if __name__ == "__main__":
    main()